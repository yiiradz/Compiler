INT_TOKEN int
ID_TOKEN x
BRACKETOPEN_TOKEN [
NUM_TOKEN 2
BRACKETCLOSE_TOKEN ]
SEMICOLON_TOKEN ;
INT_TOKEN int
ID_TOKEN y
SEMICOLON_TOKEN ;
VOID_TOKEN void
ID_TOKEN main
VOID_TOKEN void
PARANCLOSE_TOKEN )
BRACEOPEN_TOKEN {
ID_TOKEN x
BRACKETOPEN_TOKEN [
NUM_TOKEN 0
BRACKETCLOSE_TOKEN ]
EQUAL_TOKEN =
NUM_TOKEN 1
SEMICOLON_TOKEN ;
ID_TOKEN x
BRACKETOPEN_TOKEN [
NUM_TOKEN 1
BRACKETCLOSE_TOKEN ]
EQUAL_TOKEN =
NUM_TOKEN 2
SEMICOLON_TOKEN ;
ID_TOKEN y
EQUAL_TOKEN =
ID_TOKEN x
BRACKETOPEN_TOKEN [
NUM_TOKEN 1
BRACKETCLOSE_TOKEN ]
SEMICOLON_TOKEN ;
ID_TOKEN output
PARANOPEN_TOKEN (
ID_TOKEN y
PARANCLOSE_TOKEN )
SEMICOLON_TOKEN ;
BRACECLOSE_TOKEN }
EOF_TOKEN 
